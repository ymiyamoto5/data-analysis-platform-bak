"""Initial

Revision ID: 768680dba9ea
Revises: 
Create Date: 2021-10-06 17:39:15.179465

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "768680dba9ea"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "machine_types",
        sa.Column("machine_type_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("machine_type_name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("machine_type_id"),
        sa.UniqueConstraint("machine_type_name"),
    )
    op.create_index(op.f("ix_machine_types_machine_type_id"), "machine_types", ["machine_type_id"], unique=False)
    op.create_table(
        "sensor_types",
        sa.Column("sensor_type_id", sa.String(length=255), nullable=False),
        sa.Column("sensor_type_name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("sensor_type_id"),
        sa.UniqueConstraint("sensor_type_name"),
    )
    op.create_index(op.f("ix_sensor_types_sensor_type_id"), "sensor_types", ["sensor_type_id"], unique=False)
    op.create_table(
        "machines",
        sa.Column("machine_id", sa.String(length=255), nullable=False),
        sa.Column("machine_name", sa.String(length=255), nullable=False),
        sa.Column("collect_status", sa.String(length=255), nullable=True),
        sa.Column("machine_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["machine_type_id"],
            ["machine_types.machine_type_id"],
        ),
        sa.PrimaryKeyConstraint("machine_id"),
    )
    op.create_index(op.f("ix_machines_machine_id"), "machines", ["machine_id"], unique=False)
    op.create_table(
        "data_collect_histories",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("machine_id", sa.String(length=255), nullable=False),
        sa.Column("machine_name", sa.String(length=255), nullable=False),
        sa.Column("machine_type_id", sa.Integer(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=False),
        sa.Column("ended_at", sa.DateTime(), nullable=True),
        sa.Column("sampling_frequency", sa.Integer(), nullable=False),
        sa.Column("sampling_ch_num", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["machine_id"],
            ["machines.machine_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_data_collect_histories_id"), "data_collect_histories", ["id"], unique=False)
    op.create_table(
        "gateways",
        sa.Column("gateway_id", sa.String(length=255), nullable=False),
        sa.Column("sequence_number", sa.Integer(), nullable=True),
        sa.Column("gateway_result", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=255), nullable=True),
        sa.Column("log_level", sa.Integer(), nullable=True),
        sa.Column("machine_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["machine_id"],
            ["machines.machine_id"],
        ),
        sa.PrimaryKeyConstraint("gateway_id"),
    )
    op.create_index(op.f("ix_gateways_gateway_id"), "gateways", ["gateway_id"], unique=False)
    op.create_table(
        "data_collect_history_sensors",
        sa.Column("data_collect_history_id", sa.Integer(), nullable=False),
        sa.Column("sensor_id", sa.String(length=255), nullable=False),
        sa.Column("sensor_name", sa.String(length=255), nullable=False),
        sa.Column("sensor_type_id", sa.String(length=255), nullable=False),
        sa.Column("base_volt", sa.Float(), nullable=True),
        sa.Column("base_load", sa.Float(), nullable=True),
        sa.Column("initial_volt", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_collect_history_id"],
            ["data_collect_histories.id"],
        ),
        sa.PrimaryKeyConstraint("data_collect_history_id", "sensor_id"),
    )
    op.create_index(
        op.f("ix_data_collect_history_sensors_data_collect_history_id"),
        "data_collect_history_sensors",
        ["data_collect_history_id"],
        unique=False,
    )
    op.create_index(op.f("ix_data_collect_history_sensors_sensor_id"), "data_collect_history_sensors", ["sensor_id"], unique=False)
    op.create_table(
        "handlers",
        sa.Column("handler_id", sa.String(length=255), nullable=False),
        sa.Column("handler_type", sa.String(length=255), nullable=False),
        sa.Column("adc_serial_num", sa.String(length=255), nullable=False),
        sa.Column("sampling_frequency", sa.Integer(), nullable=False),
        sa.Column("sampling_ch_num", sa.Integer(), nullable=False),
        sa.Column("filewrite_time", sa.Integer(), nullable=False),
        sa.Column("gateway_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["gateway_id"],
            ["gateways.gateway_id"],
        ),
        sa.PrimaryKeyConstraint("handler_id"),
    )
    op.create_index(op.f("ix_handlers_handler_id"), "handlers", ["handler_id"], unique=False)
    op.create_table(
        "sensors",
        sa.Column("machine_id", sa.String(length=255), nullable=False),
        sa.Column("sensor_id", sa.String(length=255), nullable=False),
        sa.Column("sensor_name", sa.String(length=255), nullable=False),
        sa.Column("sensor_type_id", sa.String(length=255), nullable=False),
        sa.Column("base_volt", sa.Float(), nullable=True),
        sa.Column("base_load", sa.Float(), nullable=True),
        sa.Column("initial_volt", sa.Float(), nullable=True),
        sa.Column("handler_id", sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(
            ["handler_id"],
            ["handlers.handler_id"],
        ),
        sa.ForeignKeyConstraint(
            ["machine_id"],
            ["machines.machine_id"],
        ),
        sa.ForeignKeyConstraint(
            ["sensor_type_id"],
            ["sensor_types.sensor_type_id"],
        ),
        sa.PrimaryKeyConstraint("machine_id", "sensor_id"),
    )
    op.create_index(op.f("ix_sensors_machine_id"), "sensors", ["machine_id"], unique=False)
    op.create_index(op.f("ix_sensors_sensor_id"), "sensors", ["sensor_id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_sensors_sensor_id"), table_name="sensors")
    op.drop_index(op.f("ix_sensors_machine_id"), table_name="sensors")
    op.drop_table("sensors")
    op.drop_index(op.f("ix_handlers_handler_id"), table_name="handlers")
    op.drop_table("handlers")
    op.drop_index(op.f("ix_data_collect_history_sensors_sensor_id"), table_name="data_collect_history_sensors")
    op.drop_index(op.f("ix_data_collect_history_sensors_data_collect_history_id"), table_name="data_collect_history_sensors")
    op.drop_table("data_collect_history_sensors")
    op.drop_index(op.f("ix_gateways_gateway_id"), table_name="gateways")
    op.drop_table("gateways")
    op.drop_index(op.f("ix_data_collect_histories_id"), table_name="data_collect_histories")
    op.drop_table("data_collect_histories")
    op.drop_index(op.f("ix_machines_machine_id"), table_name="machines")
    op.drop_table("machines")
    op.drop_index(op.f("ix_sensor_types_sensor_type_id"), table_name="sensor_types")
    op.drop_table("sensor_types")
    op.drop_index(op.f("ix_machine_types_machine_type_id"), table_name="machine_types")
    op.drop_table("machine_types")
    # ### end Alembic commands ###
